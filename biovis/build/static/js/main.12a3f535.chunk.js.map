{"version":3,"sources":["firebase.js","auth/login.js","auth/signup.js","buysell/buysell.js","admin/admin.js","auth/adminLogin.js","buysell/payment.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","styles","paper","display","flexDirection","alignItems","icon","margin","backgroundColor","input","marginTop","errorMessage","color","Login","props","handleUsernameChange","event","setState","username","target","value","handlePasswordChange","password","handleLoginSubmit","state","isUsernameVerified","verifyUsername","isPasswordVerified","verifyPassword","showError","signInWithEmailAndPassword","then","data","localStorage","setItem","history","push","catch","error","message","console","log","length","Container","component","maxWidth","style","Avatar","Typography","variant","className","form","noValidate","TextField","this","required","fullWidth","label","autoComplete","onChange","autoFocus","type","Button","onClick","Grid","container","item","xs","Link","href","React","Component","withRouter","SignUp","handleConfirmPasswordChange","confirmPassword","a","createUserWithEmailAndPassword","userRef","doc","user","uid","get","exists","set","email","table","minWidth","OrderHistory","orderId","byproductType","weight","date","time","pricePerKg","totalPayable","TabPanel","children","index","other","role","hidden","id","aria-labelledby","Box","p","Buy","handleRequestSubmit","e","db","preventDefault","Date","now","collection","add","company","status","byproduct","toLocaleString","timeInMilli","window","location","reload","handlesellerSubmit","rate","handleLogoutSubmit","handlePayment","handleByProductChange","firstChild","handleRateChange","handleWeightChange","handleCompanyChange","rows","tableData","sellData","getItem","querySnapshot","forEach","byproductTypes","float","marginRight","AppBar","position","Tabs","newValue","aria-label","Tab","Autocomplete","options","getOptionLabel","option","width","inputValue","renderInput","params","InputProps","inputProps","min","endAdornment","InputAdornment","companyName","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","admin","handleChange","reloadPage","sellApproved","update","setTimeout","sellRejected","approved","rejected","onRowSelection","selectrow","filter","background","AdminLogin","actualUsername","actualPassword","Payment","handlePaymentSubmit","handleReturn","main","padding","justify","sm","fontWeight","elevation","gutterBottom","spacing","marginBottom","FormControl","InputLabel","htmlFor","OutlinedInput","name","startAdornment","PrivateRoute","path","to","pathname","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12a3f535.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAqt50ORCfP0VknDxuq5F16N2XUbPDPEcs\",\r\n    authDomain: \"biovis.firebaseapp.com\",\r\n    databaseURL: \"https://biovis.firebaseio.com\",\r\n    projectId: \"biovis\",\r\n    storageBucket: \"biovis.appspot.com\",\r\n    messagingSenderId: \"635873039623\",\r\n    appId: \"1:635873039623:web:e67892327e943bb782a1a2\",\r\n    measurementId: \"G-W98TGFFXGX\"\r\n  };\r\n\r\n  \r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();","import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\n\r\n//inline styles\r\nconst styles = {\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    margin: 'auto',\r\n    backgroundColor: 'green',\r\n  },\r\n  input: {\r\n    marginTop: '20px',\r\n  },\r\n  errorMessage: {\r\n    color: 'red',\r\n  },\r\n};\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '', //not a secure way to store the passsword - needs updating\r\n      showError: false,\r\n      errorMessage: '',\r\n    };\r\n  }\r\n\r\n  handleUsernameChange = (event) => {\r\n    //event.target.value is the username input's value\r\n    this.setState({ username: event.target.value });\r\n  };\r\n\r\n  handlePasswordChange = (event) => {\r\n    //event.target.value is the password input's value\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  handleLoginSubmit = () => {\r\n    //putting these in vars so we don't have to repeatedly fetch state\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n\r\n    const isUsernameVerified = this.verifyUsername(username);\r\n    const isPasswordVerified = this.verifyPassword(password);\r\n\r\n    if (isUsernameVerified && isPasswordVerified) {\r\n      this.setState({ showError: false, errorMessage: '' });\r\n\r\n      auth\r\n        .signInWithEmailAndPassword(this.state.username, this.state.password)\r\n        .then((data) => {\r\n          localStorage.setItem('loggedIn', true);\r\n          localStorage.setItem('email', this.state.username);\r\n          this.props.history.push('/buysell');\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ showError: true, errorMessage: error.message });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      isUsernameVerified\r\n        ? this.setState({ showError: true, errorMessage: 'Password must be at least 8 characters.' }) //if username is verified then password has the error\r\n        : this.setState({ showError: true, errorMessage: 'Username must be at least 5 characters.' }); //username not verified\r\n    }\r\n  };\r\n\r\n  verifyUsername = (username) => {\r\n    //only condition is that username cannot be empty\r\n    if (username.length > 5) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  verifyPassword = (password) => {\r\n    //password cannot be empty\r\n    if (password.length > 5) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div style={styles.paper}>\r\n          <Avatar style={styles.icon}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography>\r\n          <form className={styles.form} noValidate>\r\n            {/* username field */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={this.state.username}\r\n              style={styles.input}\r\n              required\r\n              fullWidth\r\n              label=\"Email\"\r\n              autoComplete=\"email\" //shows emails that user has previously entered\r\n              onChange={this.handleUsernameChange}\r\n              autoFocus\r\n            />\r\n            {/* password field */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={this.state.password}\r\n              style={styles.input}\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onChange={this.handlePasswordChange}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginTop: '10px' }}\r\n              onClick={this.handleLoginSubmit}\r\n            >\r\n              Login\r\n            </Button>\r\n            {this.state.showError && <Typography style={styles.errorMessage}>{this.state.errorMessage}</Typography>}\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* doesn't link anywhere yet - feature to be implemented later */}\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n      \r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* doesn't link anywhere yet - feature to be implemented later */}\r\n                <Link href=\"/adminLogin\" variant=\"body2\">\r\n                  Admin Account\r\n                </Link>\r\n              </Grid>  \r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport React from 'react';\r\nimport { auth, firestore } from '../firebase';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//inline styles\r\nconst styles = {\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    margin: 'auto',\r\n    backgroundColor: 'green',\r\n  },\r\n  input: {\r\n    marginTop: '20px',\r\n  },\r\n  errorMessage: {\r\n    color: 'red',\r\n  },\r\n};\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '', //not a secure way to store the passsword - needs updating\r\n      confirmPassword: '',\r\n      showError: false,\r\n      errorMessage: '',\r\n    };\r\n  }\r\n\r\n  handleUsernameChange = (event) => {\r\n    //event.target.value is the username input's value\r\n    this.setState({ username: event.target.value });\r\n  };\r\n\r\n  handlePasswordChange = (event) => {\r\n    //event.target.value is the password input's value\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  handleConfirmPasswordChange = (event) => {\r\n    //event.target.value is the password input's value\r\n    if (this.state.password != event.target.value) {\r\n      this.setState({ showError: true, errorMessage: 'Passwords do not match!' });\r\n    } else {\r\n      this.setState({ showError: false, errorMessage: '' });\r\n    }\r\n    this.setState({ confirmPassword: event.target.value });\r\n  };\r\n  handleLoginSubmit = async () => {\r\n    //putting these in vars so we don't have to repeatedly fetch state\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n\r\n    const isUsernameVerified = this.verifyUsername(username);\r\n    const isPasswordVerified = this.verifyPassword(password);\r\n\r\n    if (isUsernameVerified && isPasswordVerified) {\r\n      this.setState({ showError: false, errorMessage: '' });\r\n\r\n      try {\r\n        auth.createUserWithEmailAndPassword(this.state.username, this.state.password).then(async (data) => {\r\n          const userRef = firestore.doc(`user/${data.user.uid}`);\r\n          const snapshot = await userRef.get();\r\n          if (!snapshot.exists) {\r\n            const { username, password } = this.state;\r\n            try {\r\n              await userRef.set({\r\n                email: username,\r\n                password: password,\r\n              });\r\n            } catch (error) {\r\n              console.error('Error creating user document', error);\r\n            }\r\n          }\r\n          this.props.history.push('/login');\r\n          console.log(data);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      isUsernameVerified\r\n        ? this.setState({ showError: true, errorMessage: 'Password must be at least 8 characters.' }) //if username is verified then password has the error\r\n        : this.setState({ showError: true, errorMessage: 'Username must be at least 5 characters.' }); //username not verified\r\n    }\r\n  };\r\n\r\n  verifyUsername = (username) => {\r\n    //only condition is that username cannot be empty\r\n    if (username.length > 5) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  verifyPassword = (password) => {\r\n    //password cannot be empty\r\n    if (password.length > 5) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div style={styles.paper}>\r\n          <Avatar style={styles.icon}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form className={styles.form} noValidate>\r\n            {/* username field */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={this.state.username}\r\n              style={styles.input}\r\n              required\r\n              fullWidth\r\n              label=\"Email\"\r\n              autoComplete=\"email\" //shows emails that user has previously entered\r\n              onChange={this.handleUsernameChange}\r\n              autoFocus\r\n            />\r\n            {/* password field */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={this.state.password}\r\n              style={styles.input}\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onChange={this.handlePasswordChange}\r\n            />\r\n            {/* new password field */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={this.state.confirmPassword}\r\n              style={styles.input}\r\n              required\r\n              fullWidth\r\n              label=\"New Password\"\r\n              type=\"password\"\r\n              onChange={this.handleConfirmPasswordChange}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginTop: '10px' }}\r\n              onClick={this.handleLoginSubmit}\r\n            >\r\n              SignUp\r\n            </Button>\r\n            {this.state.showError && <Typography style={styles.errorMessage}>{this.state.errorMessage}</Typography>}\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* doesn't link anywhere yet - feature to be implemented later */}\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  {'Already have an account? Login'}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\n//Imports for History Table\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { auth, firestore } from \"../firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//Import for tabs\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n//inline styles\r\nconst styles = {\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  icon: {\r\n    margin: \"auto\",\r\n    backgroundColor: \"green\",\r\n  },\r\n  input: {\r\n    marginTop: \"20px\",\r\n  },\r\n  errorMessage: {\r\n    color: \"red\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n};\r\n\r\n//used this function for setting the values in the system.\r\nfunction OrderHistory(\r\n  orderId,\r\n  byproductType,\r\n  weight,\r\n  date,\r\n  time,\r\n  pricePerKg,\r\n  totalPayable\r\n) {\r\n  return {\r\n    orderId,\r\n    byproductType,\r\n    weight,\r\n    date,\r\n    time,\r\n    pricePerKg,\r\n    totalPayable,\r\n  };\r\n}\r\n\r\n// this function is used for designing tab panel.\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// class is containing tje state values in system and added some default values.\r\nclass Buy extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      byproduct: \"\",\r\n      weight: 1,\r\n      rate: 1,\r\n      company: \"\",\r\n      email: \"\",\r\n      tableData: [],\r\n      sellData: [],\r\n      value: 0,\r\n    };\r\n  }\r\n\r\n  // it sets the email values and store the data in buy and sell collection of when ever triggered.\r\n  componentDidMount() {\r\n    this.setState({\r\n      email: localStorage.getItem(\"email\"),\r\n    });\r\n    const db = firestore;\r\n    let tableData = [];\r\n    db.collection(\"buy\")\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          tableData.push(doc.data());\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          tableData: tableData,\r\n        });\r\n      });\r\n    let sellData = [];\r\n    db.collection(\"sell\")\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          sellData.push(doc.data());\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          sellData: sellData,\r\n        });\r\n      });\r\n  }\r\n\r\n  // renderRedirect = () => {\r\n  //   if (this.state.redirect) {\r\n  //     return <Redirect to='/buysell' />\r\n  //   }\r\n  // }\r\n\r\n  // adding values in firebase buy collection and some are default.\r\n  handleRequestSubmit = async (e) => {\r\n    const db = firestore;\r\n    e.preventDefault();\r\n    var date = Date.now();\r\n    var date = new Date(date);\r\n    const userRef = await db.collection(\"buy\").add({\r\n      company: this.state.company,\r\n      status: \"Pending\",\r\n      type: this.state.byproduct,\r\n      weight: this.state.weight,\r\n      time: date.toLocaleString(),\r\n      timeInMilli: Date.now(),\r\n    });\r\n    console.log(userRef);\r\n    window.location.reload();\r\n    // this.renderRedirect()\r\n  };\r\n\r\n  // adding values in firabase sell collection and some are default.\r\n  handlesellerSubmit = async (e) => {\r\n    const db = firestore;\r\n    e.preventDefault();\r\n    var date = Date.now();\r\n    var date = new Date(date);\r\n    const userRef = await db.collection(\"sell\").add({\r\n      rate: this.state.rate,\r\n      status: \"Pending\",\r\n      type: this.state.byproduct,\r\n      weight: this.state.weight,\r\n      time: date.toLocaleString(),\r\n      timeInMilli: Date.now(),\r\n    });\r\n    console.log(userRef);\r\n    window.location.reload();\r\n    // this.renderRedirect()\r\n  };\r\n\r\n  handleLogoutSubmit = (e) => {\r\n    localStorage.setItem(\"loggedIn\", false);\r\n    this.props.history.push(\"/login\");\r\n  };\r\n\r\n  handlePayment = (e) => {\r\n    this.props.history.push(\"/payment\");\r\n  };\r\n\r\n  handleByProductChange = (e) => {\r\n    this.setState({\r\n      byproduct: e.target.firstChild.data,\r\n    });\r\n  };\r\n\r\n  handleRateChange = (e) => {\r\n    this.setState({\r\n      rate: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleWeightChange = (e) => {\r\n    this.setState({\r\n      weight: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleCompanyChange = (e) => {\r\n    this.setState({\r\n      company: e.target.firstChild.data,\r\n    });\r\n  };\r\n\r\n  rows = [\r\n    OrderHistory(1, \"Type 1\", 15, \"7 July 2020\", \"09:16:00\", 6, 90),\r\n    OrderHistory(2, \"Type 2\", 17, \"12 July 2020\", \"10:22:00\", 10, 170),\r\n    OrderHistory(3, \"Type 1\", 14, \"1 August 2020\", \"09:23:00\", 5, 70),\r\n    OrderHistory(4, \"Type 4\", 10, \"30 August 2020\", \"09:16:00\", 6, 60),\r\n    OrderHistory(5, \"Type 2\", 20, \"22 September 2020\", \"09:16:00\", 6, 120),\r\n  ];\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const byproductTypes = [\r\n      { type: \"Type 1\" },\r\n      { type: \"Type 2\" },\r\n      { type: \"Type 3\" },\r\n      { type: \"Type 4\" },\r\n    ];\r\n    const manufacturers = [\r\n      { companyName: \"Company A\", pricePerKg: 10 },\r\n      { companyName: \"Company B\", pricePerKg: 5 },\r\n      { companyName: \"Company C\", pricePerKg: 6 },\r\n      { companyName: \"Company D\", pricePerKg: 6 },\r\n    ];\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"lg\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={this.handleLogoutSubmit}\r\n          style={{\r\n            float: \"right\",\r\n          }}\r\n        >\r\n          LogOut\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={this.handlePayment}\r\n          style={{\r\n            float: \"right\",\r\n            marginRight: \"5px\",\r\n          }}\r\n        >\r\n          Make Payment\r\n        </Button>\r\n\r\n        <AppBar position=\"static\">\r\n          <Tabs\r\n            value={this.state.value}\r\n            onChange={(event, newValue) => this.setState({ value: newValue })}\r\n            aria-label=\"simple tabs example\"\r\n          >\r\n            <Tab label=\"Buy\" />\r\n            <Tab label=\"Sell\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={this.state.value} index={0}>\r\n          <div style={styles.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Buy Your Raw Material\r\n            </Typography>\r\n            <form className={styles.form} noValidate>\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={byproductTypes}\r\n                getOptionLabel={(option) => option.type}\r\n                style={{ width: 300, marginTop: 16 }}\r\n                onChange={this.handleByProductChange}\r\n                inputValue={this.state.byproduct}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Select Byproduct Type\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                type=\"number\"\r\n                InputProps={{\r\n                  inputProps: {\r\n                    min: 0,\r\n                  },\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  ),\r\n                }}\r\n                label=\"Weight\"\r\n                style={{ width: 300, marginTop: 16 }}\r\n                variant=\"outlined\"\r\n                onChange={this.handleWeightChange}\r\n                value={this.state.weight}\r\n              />\r\n\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={manufacturers}\r\n                getOptionLabel={(option) =>\r\n                  option.companyName +\r\n                  \"     -     $\" +\r\n                  option.pricePerKg +\r\n                  \" Per Kg\"\r\n                }\r\n                onChange={this.handleCompanyChange}\r\n                inputValue={this.state.company}\r\n                style={{ width: 300, marginTop: 16 }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Select Company\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                style={{ marginTop: 16 }}\r\n                onClick={this.handleRequestSubmit}\r\n              >\r\n                Submit Request\r\n              </Button>\r\n            </form>\r\n          </div>\r\n\r\n          <TableContainer\r\n            component={Paper}\r\n            style={{ marginTop: 24, width: 1024 }}\r\n          >\r\n            <Table className={styles.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {/* <TableCell align=\"right\">Order ID</TableCell> */}\r\n                  <TableCell align=\"right\">Byproduct Type</TableCell>\r\n                  <TableCell align=\"right\">Weight&nbsp;(Kg)</TableCell>\r\n                  <TableCell align=\"right\">Company</TableCell>\r\n                  {/* <TableCell align=\"right\">Total Payable</TableCell> */}\r\n                  <TableCell align=\"right\">Date</TableCell>\r\n                  <TableCell align=\"right\">Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.tableData.map((row) => (\r\n                  <TableRow>\r\n                    {/* <TableCell component=\"th\" scope=\"row\"> */}\r\n                    {/* </TableCell> */}\r\n                    <TableCell align=\"right\">{row.type}</TableCell>\r\n                    <TableCell align=\"right\">{row.weight}</TableCell>\r\n                    <TableCell align=\"right\">{row.company}</TableCell>\r\n                    {/* <TableCell align=\"right\">{row.pricePerKg}</TableCell> */}\r\n                    {/* <TableCell align=\"right\">{row.totalPayable}</TableCell> */}\r\n                    <TableCell align=\"right\">{row.time}</TableCell>\r\n                    <TableCell align=\"right\">{row.status}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </TabPanel>\r\n        <TabPanel value={this.state.value} index={1}>\r\n          <div style={styles.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sell Your Byproducts\r\n            </Typography>\r\n            <form className={styles.form} noValidate>\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={byproductTypes}\r\n                getOptionLabel={(option) => option.type}\r\n                style={{ width: 300, marginTop: 16 }}\r\n                onChange={this.handleByProductChange}\r\n                inputValue={this.state.byproduct}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Select Byproduct Type\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                type=\"number\"\r\n                InputProps={{\r\n                  inputProps: {\r\n                    min: 0,\r\n                  },\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  ),\r\n                }}\r\n                label=\"Weight\"\r\n                style={{ width: 300, marginTop: 16 }}\r\n                variant=\"outlined\"\r\n                onChange={this.handleWeightChange}\r\n                value={this.state.weight}\r\n              />\r\n              <br></br>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                type=\"number\"\r\n                InputProps={{\r\n                  inputProps: {\r\n                    min: 0,\r\n                  },\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">CAD per Kg</InputAdornment>\r\n                  ),\r\n                }}\r\n                label=\"Rate\"\r\n                style={{ width: 300, marginTop: 16 }}\r\n                variant=\"outlined\"\r\n                onChange={this.handleRateChange}\r\n                value={this.state.rate}\r\n              />\r\n              <br></br>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                style={{ marginTop: 16 }}\r\n                onClick={this.handlesellerSubmit}\r\n              >\r\n                Submit Request\r\n              </Button>\r\n            </form>\r\n          </div>\r\n\r\n          <TableContainer\r\n            component={Paper}\r\n            style={{ marginTop: 24, width: 1024 }}\r\n          >\r\n            <Table className={styles.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {/* <TableCell align=\"right\">Order ID</TableCell> */}\r\n                  <TableCell align=\"right\">Byproduct Type</TableCell>\r\n                  <TableCell align=\"right\">Weight&nbsp;(Kg)</TableCell>\r\n                  <TableCell align=\"right\">Rate</TableCell>\r\n                  {/* <TableCell align=\"right\">Total Payable</TableCell> */}\r\n                  <TableCell align=\"right\">Date</TableCell>\r\n                  <TableCell align=\"right\">Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.sellData.map((row) => (\r\n                  <TableRow>\r\n                    {/* <TableCell component=\"th\" scope=\"row\"> */}\r\n                    {/* </TableCell> */}\r\n                    <TableCell align=\"right\">{row.type}</TableCell>\r\n                    <TableCell align=\"right\">{row.weight}</TableCell>\r\n                    <TableCell align=\"right\">{row.rate}</TableCell>\r\n                    {/* <TableCell align=\"right\">{row.pricePerKg}</TableCell> */}\r\n                    {/* <TableCell align=\"right\">{row.totalPayable}</TableCell> */}\r\n                    <TableCell align=\"right\">{row.time}</TableCell>\r\n                    <TableCell align=\"right\">{row.status}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </TabPanel>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Buy);\r\n","import React, { Component } from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n//Imports for History Table\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {auth,firestore} from '../firebase';\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n//Import for tabs\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n//inline styles\r\nconst styles = {\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  icon: {\r\n    margin: \"auto\",\r\n    backgroundColor: \"green\",\r\n  },\r\n  input: {\r\n    marginTop: \"20px\",\r\n  },\r\n  errorMessage: {\r\n    color: \"red\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n};\r\n\r\n// function for Tab panel : Design and values of it.\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport class admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          tableData: [],\r\n          sellData: []\r\n        };\r\n      }\r\n// adding value to state and inserting value to firebase collection buy and sell when ever is required.\r\n      componentDidMount() {\r\n        this.setState({\r\n          email: localStorage.getItem(\"email\"),\r\n          value: 0\r\n        })\r\n        const db = firestore\r\n        let tableData = []\r\n        db.collection(\"buy\").get().then(function(querySnapshot) {\r\n          querySnapshot.forEach(function(doc) {\r\n            console.log(\"Inside\")\r\n            tableData.push(doc.data())\r\n          })\r\n        }).then(() => {\r\n          this.setState({\r\n            tableData: tableData \r\n          })\r\n    \r\n        })\r\n\r\n        let sellData =[]\r\n    db.collection(\"sell\").get().then(function(querySnapshot) {\r\n      querySnapshot.forEach(function(doc) {\r\n        sellData.push(doc.data())\r\n      })\r\n    }).then(() => {\r\n      this.setState({\r\n        sellData:sellData\r\n      })\r\n\r\n    })\r\n    \r\n      }\r\n\r\n    handleChange = () => {\r\n\r\n    }\r\n// on logout send to home.\r\n    handleLogoutSubmit = (e) => {\r\n        this.props.history.push('/home')\r\n                \r\n      }\r\n   \r\n    reloadPage = () =>{\r\n      window.location.reload();\r\n    }\r\n// updateding vaule for sell collection based on the parameter provided. for Approving sell.\r\n    sellApproved = (e) =>{\r\n      const db = firestore\r\n\r\n     db.collection(\"sell\").get().then(function(querySnapshot) {\r\n        querySnapshot.forEach(function(doc) {\r\n            if(doc.data().timeInMilli == e){\r\n              db.collection(\"sell\").doc(doc.id).update({\r\n                status: \"Approved\"\r\n            });\r\n             } \r\n            \r\n        });\r\n    });\r\n    setTimeout(() => {this.reloadPage()},1000);\r\n      \r\n    }\r\n// updateding vaule for sell collection based on the parameter provided. for rejecting sell.\r\n    sellRejected = (e) =>{\r\n      const db = firestore\r\n\r\n     db.collection(\"sell\").get().then(function(querySnapshot) {\r\n        querySnapshot.forEach(function(doc) {\r\n            if(doc.data().timeInMilli == e){\r\n              db.collection(\"sell\").doc(doc.id).update({\r\n                status: \"Rejected\"\r\n            });\r\n             } \r\n            \r\n        });\r\n    });\r\n    setTimeout(() => {this.reloadPage()},1000);\r\n      \r\n    }\r\n// updateding vaule for sell collection based on the parameter provided. for Approving buy.\r\n\r\n    approved = (e) =>{\r\n      const db = firestore\r\n\r\n     db.collection(\"buy\").get().then(function(querySnapshot) {\r\n        querySnapshot.forEach(function(doc) {\r\n            if(doc.data().timeInMilli == e){\r\n              db.collection(\"buy\").doc(doc.id).update({\r\n                status: \"Approved\"\r\n            });\r\n             } \r\n            \r\n        });\r\n    });\r\n    setTimeout(() => {this.reloadPage()},1000);\r\n      \r\n    }\r\n// updateding vaule for sell collection based on the parameter provided. for Rejecting buy.\r\n    rejected = (e) =>{\r\n      const db = firestore\r\n\r\n     db.collection(\"buy\").get().then(function(querySnapshot) {\r\n        querySnapshot.forEach(function(doc) {\r\n            if(doc.data().timeInMilli == e){\r\n              db.collection(\"buy\").doc(doc.id).update({\r\n                status: \"Rejected\"\r\n            });\r\n             } \r\n            \r\n        });\r\n    });\r\n    setTimeout(() => {this.reloadPage()},1000);\r\n      \r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"lg\">\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={this.handleLogoutSubmit} style={{\r\n              float: \"right\"\r\n            }}>\r\n            LogOut\r\n           </Button>\r\n    \r\n           <AppBar position=\"static\">\r\n      <Tabs value={this.state.value} onChange={(event,newValue)=>this.setState({value:newValue})} aria-label=\"simple tabs example\">\r\n        <Tab label=\"Buyers\" />\r\n        <Tab label=\"Sellers\" />\r\n      </Tabs>\r\n    </AppBar>\r\n    <TabPanel value={this.state.value} index={0}>\r\n            <div>\r\n                <TableContainer component={Paper} style={{ marginTop: 24, width: 1024 }}>\r\n          <Table className={styles.table} aria-label=\"simple table\" onRowSelection={this.selectrow}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {/* <TableCell align=\"right\">Order ID</TableCell> */}\r\n                <TableCell align=\"right\">Byproduct Type</TableCell>\r\n                <TableCell align=\"right\">Weight&nbsp;(Kg)</TableCell>\r\n                <TableCell align=\"right\">Company</TableCell>\r\n                {/* <TableCell align=\"right\">Total Payable</TableCell> */}\r\n                <TableCell align=\"right\">Date</TableCell>\r\n                <TableCell align=\"right\">Status</TableCell>\r\n                <TableCell align=\"left\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.filter(item=>item.status === 'Pending').map((row,index) => (\r\n                <TableRow>\r\n                  {/* <TableCell component=\"th\" scope=\"row\"> */}\r\n                  {/* </TableCell> */}\r\n                  <TableCell align=\"right\">{row.type}</TableCell>\r\n                  <TableCell align=\"right\">{row.weight}</TableCell>\r\n                  <TableCell align=\"right\">{row.company}</TableCell>\r\n                  {/* <TableCell align=\"right\">{row.pricePerKg}</TableCell> */}\r\n                  {/* <TableCell align=\"right\">{row.totalPayable}</TableCell> */}\r\n                  <TableCell align=\"right\">{row.time}</TableCell>\r\n                  <TableCell align=\"right\">{row.status}</TableCell>\r\n                  <TableCell align=\"right\" onClick={() => this.approved(row.timeInMilli)}><div>  \r\n                  <Button variant=\"contained\" style={{background:'green',marginRight:'0.5em'}}>\r\n                  Approve\r\n                  </Button>\r\n                  </div></TableCell>\r\n                  <TableCell align=\"right\" onClick={() => this.rejected(row.timeInMilli)}><div>\r\n                  <Button variant=\"contained\" color=\"secondary\" >\r\n                  Reject\r\n                 </Button></div></TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n            </div>\r\n            </TabPanel>\r\n<TabPanel value={this.state.value} index={1}>\r\n<div>\r\n<TableContainer component={Paper} style={{ marginTop: 24, width: 1024 }}>\r\n          <Table className={styles.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {/* <TableCell align=\"right\">Order ID</TableCell> */}\r\n                <TableCell align=\"right\">Byproduct Type</TableCell>\r\n                <TableCell align=\"right\">Weight&nbsp;(Kg)</TableCell>\r\n                <TableCell align=\"right\">Rate</TableCell>\r\n                {/* <TableCell align=\"right\">Total Payable</TableCell> */}\r\n                <TableCell align=\"right\">Date</TableCell>\r\n                <TableCell align=\"right\">Status</TableCell>\r\n                <TableCell align=\"left\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.sellData.filter(item=>item.status === 'Pending').map((row) => (\r\n                <TableRow >\r\n                  {/* <TableCell component=\"th\" scope=\"row\"> */}\r\n                  {/* </TableCell> */}\r\n                  <TableCell align=\"right\">{row.type}</TableCell>\r\n                  <TableCell align=\"right\">{row.weight}</TableCell>\r\n                  <TableCell align=\"right\">{row.rate}</TableCell>\r\n                  {/* <TableCell align=\"right\">{row.pricePerKg}</TableCell> */}\r\n                  {/* <TableCell align=\"right\">{row.totalPayable}</TableCell> */}\r\n                  <TableCell align=\"right\">{row.time}</TableCell>\r\n                  <TableCell align=\"right\">{row.status}</TableCell>\r\n                  <TableCell align=\"right\" onClick={() => this.sellApproved(row.timeInMilli)}><div>  \r\n                  <Button variant=\"contained\" style={{background:'green',marginRight:'0.5em'}}>\r\n                  Approve\r\n                  </Button>\r\n                  </div></TableCell>\r\n                  <TableCell align=\"right\" onClick={() => this.sellRejected(row.timeInMilli)}><div>\r\n                  <Button variant=\"contained\" color=\"secondary\" >\r\n                  Reject\r\n                 </Button></div></TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n            </div>\r\n</TabPanel>\r\n\r\n</Container>     \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(admin);\r\n","import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport {auth} from '../firebase';\r\n\r\n//inline styles\r\nconst styles = {\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    margin: 'auto',\r\n    backgroundColor: 'green',\r\n  },\r\n  input: {\r\n    marginTop: '20px',\r\n  },\r\n  errorMessage: {\r\n    color: 'red',\r\n  },\r\n};\r\n\r\nclass AdminLogin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      actualUsername: 'biovis123@gmail.com',\r\n      actualPassword: 'Biovis123',\r\n      username: '',\r\n      password: '', //not a secure way to store the passsword - needs updating\r\n      showError: false,\r\n      errorMessage: '',\r\n    };\r\n  }\r\n\r\n  handleUsernameChange = (event) => {\r\n    //event.target.value is the username input's value\r\n    this.setState({ username: event.target.value });\r\n  };\r\n\r\n  handlePasswordChange = (event) => {\r\n    //event.target.value is the password input's value\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  handleLoginSubmit = () => {\r\n    //putting these in vars so we don't have to repeatedly fetch state\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n\r\n    const isUsernameVerified = this.verifyUsername(username);\r\n    const isPasswordVerified = this.verifyPassword(password);\r\n\r\n    if (isUsernameVerified && isPasswordVerified) {\r\n        if( username == this.state.actualUsername && password == this.state.actualPassword)\r\n        {\r\n            this.props.history.push('/admin')\r\n        }\r\n      this.setState({ showError: false, errorMessage: '' });\r\n\r\n    } else {\r\n      isUsernameVerified\r\n        ? this.setState({ showError: true, errorMessage: 'Password must be at least 8 characters.' }) //if username is verified then password has the error\r\n        : this.setState({ showError: true, errorMessage: 'Username must be at least 5 characters.' }); //username not verified\r\n    }\r\n  };\r\n\r\n  verifyUsername = (username) => {\r\n    //only condition is that username cannot be empty\r\n    if (username.length > 5) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  verifyPassword = (password) => {\r\n    //password cannot be empty\r\n    if (password.length > 5) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div style={styles.paper}>\r\n          <Avatar style={styles.icon}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography>\r\n          <form className={styles.form} noValidate>\r\n            {/* username field */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={this.state.username}\r\n              style={styles.input}\r\n              required\r\n              fullWidth\r\n              label=\"Email\"\r\n              autoComplete=\"email\" //shows emails that user has previously entered\r\n              onChange={this.handleUsernameChange}\r\n              autoFocus\r\n            />\r\n            {/* password field */}\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={this.state.password}\r\n              style={styles.input}\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onChange={this.handlePasswordChange}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginTop: '10px' }}\r\n              onClick={this.handleLoginSubmit}\r\n            >\r\n              Login\r\n            </Button>\r\n            {this.state.showError && <Typography style={styles.errorMessage}>{this.state.errorMessage}</Typography>}\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* doesn't link anywhere yet - feature to be implemented later */}\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AdminLogin);\r\n","import Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Payment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      company: '',\r\n    };\r\n  }\r\n\r\n  handleCompanyChange = (e) => {\r\n    this.setState({\r\n      company: e.target.firstChild.data,\r\n    });\r\n  };\r\n\r\n  handlePaymentSubmit = (e) => {\r\n    //Actual payment verification is a pending feature\r\n    this.props.history.push('/buysell');\r\n  };\r\n\r\n  handleLogoutSubmit = (e) => {\r\n    localStorage.setItem('loggedIn', false);\r\n    this.props.history.push('/login');\r\n  };\r\n\r\n  handleReturn = (e) => {\r\n    this.props.history.push('/buysell');\r\n  };\r\n\r\n  render() {\r\n    //inline styles\r\n    const styles = {\r\n      main: {\r\n        marginTop: '45px',\r\n      },\r\n      paper: {\r\n        padding: '20px',\r\n        backgroundColor: '#f5f5f5',\r\n      },\r\n    };\r\n\r\n    //sample manufacturers since payment feature won't be fully implemented to accept payments\r\n    const manufacturers = [\r\n      { companyName: 'Company A', pricePerKg: 10 },\r\n      { companyName: 'Company B', pricePerKg: 5 },\r\n      { companyName: 'Company C', pricePerKg: 6 },\r\n      { companyName: 'Company D', pricePerKg: 6 },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={this.handleLogoutSubmit}\r\n          style={{\r\n            float: 'right',\r\n            marginRight: '5px',\r\n          }}\r\n        >\r\n          Log Out\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={this.handleReturn}\r\n          style={{\r\n            float: 'right',\r\n            marginRight: '5px',\r\n          }}\r\n        >\r\n          Return to listings\r\n        </Button>\r\n        <Grid container justify=\"center\">\r\n          <Grid item sm={6} style={styles.main}>\r\n            <Typography variant=\"h6\" style={{ fontWeight: '500' }}>\r\n              Make a Payment\r\n            </Typography>\r\n            <Paper elevation={3} variant=\"outlined\" style={styles.paper}>\r\n              {/* transaction info */}\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Transaction Information\r\n              </Typography>\r\n              <Grid container spacing={3} style={{ marginBottom: '10px' }}>\r\n                <Grid item xs={12} sm={5}>\r\n                  <Autocomplete\r\n                    options={manufacturers}\r\n                    getOptionLabel={(option) => option.companyName + '     -     $' + option.pricePerKg + ' Per Kg'}\r\n                    onChange={this.handleCompanyChange}\r\n                    inputValue={this.state.company}\r\n                    renderInput={(params) => <TextField {...params} label=\"Select Company\" variant=\"outlined\" />}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={5}>\r\n                  <FormControl fullWidth variant=\"outlined\" style={{ margin: '8' }}>\r\n                    <InputLabel htmlFor=\"paymentAmount\" style={{ backgroundColor: '#f5f5f5' }}>\r\n                      Payment Amount\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      required\r\n                      fullWidth\r\n                      name=\"paymentAmount\"\r\n                      variant=\"outlined\"\r\n                      startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* make payment section */}\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Payment Information\r\n              </Typography>\r\n              <Grid container spacing={3} style={{ marginBottom: '10px' }}>\r\n                <Grid item xs={12} sm={5}>\r\n                  <TextField required fullWidth name=\"cardName\" label=\"Cardholder Name\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={5}>\r\n                  <TextField required fullWidth name=\"cardNumber\" label=\"Card Number\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={5}>\r\n                  <TextField required fullWidth name=\"expiryDate\" label=\"Expiry Date\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={5}>\r\n                  <TextField required fullWidth name=\"csv\" label=\"CSV\" variant=\"outlined\" />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* shipping address section */}\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"firstName\" label=\"First name\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"lastName\" label=\"Last name\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"address1\" label=\"Address line 1\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"address2\" label=\"Address line 2\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"city\" label=\"City\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"state\" label=\"State/Province/Region\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"Postal Code\" label=\"Postal code\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField fullWidth name=\"country\" label=\"Country\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    style={{ float: 'right' }}\r\n                    onClick={this.handlePaymentSubmit}\r\n                  >\r\n                    Submit Payment\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Payment);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from './auth/login';\r\nimport SignUp from './auth/signup';\r\nimport BuySell from './buysell/buysell';\r\nimport Admin from './admin/admin';\r\nimport AdminLogin from './auth/adminLogin';\r\nimport Payment from './buysell/payment';\r\n\r\nconst PrivateRoute = (path) => {\r\n  console.log(localStorage.getItem('loggedIn'));\r\n  return (\r\n    <Route path={path}>\r\n      {localStorage.getItem('loggedIn') === 'true' ? <BuySell /> : <Redirect to={{ pathname: '/login' }} />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n\r\n        <Switch>\r\n          <Route path=\"/signup\">\r\n            <SignUp />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/payment\">\r\n            <Payment />\r\n          </Route>\r\n          <PrivateRoute path=\"/buysell\" />\r\n          <Route path=\"/admin\">\r\n            <Admin />\r\n          </Route>\r\n          <Route path=\"/adminLogin\">\r\n            <AdminLogin />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Redirect to={{ pathname: '/login' }} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}